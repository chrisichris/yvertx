/*
 * Copyright 2011 Christian Essl
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 */

module yvertx.net;

import org.vertx.java.core: Handler, Vertx;
import org.vertx.java.core.net:NetSocket,
                               WebSocket,
                               NetServer,
                               NetClient;


yvertx = load yvertx;

toSocketHandler fn =
        yvertx.toHandler (fn . (unsafely_as ~NetSocket));

closedHandler socket handler =
    (socket is ~NetSocket)#closedHandler(yvertx.toSimpleHandler handler);
    
createClient () = 
    (yvertx.vertx)#createNetClient();

connectClient client hostPort exceptionHandler handler =
    ({host,port} = yvertx.helper.hostAndPort hostPort;
     (client is ~NetClient)#exceptionHandler(
            yvertx.toExceptionHandler exceptionHandler);
     _ = client#connect(port is number, host is string,
                toSocketHandler handler);
     ());

createAndConnectClient hostPort settings exceptionHandler handler=
    (client = createClient ();
    _ = settings client;
    connectClient client hostPort exceptionHandler handler;
    client);
    
createServer () =
    (yvertx.vertx)#createNetServer();

connectHandler server handler =
    (server is ~NetServer)#connectHandler(toSocketHandler handler);

createServerWithHandler handler =
    connectHandler (createServer ()) handler;

closeServer server handler =
    (server is ~NetServer)#close(yvertx.toSimpleHandler handler);

closeClient client =
    (client is ~NetClient)#close();
{
    toSocketHandler,
    closedHandler,
    createClient,
    connectClient,
    createAndConnectClient,
    createServer,
    createServerWithHandler,
    connectHandler,
    closeServer,
    closeClient,
}
    
