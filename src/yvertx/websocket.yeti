/*
 * Copyright 2011 Christian Essl
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 */

module yvertx.websocket;

                 
import org.vertx.java.core: Handler, Vertx;

import org.vertx.java.core.http:HttpServer,
                                HttpServerRequest,
                                WebSocket,
                                ServerWebSocket,
                                HttpClient;

yvertx = load yvertx;

serverHandler server fn =
    ((server is ~HttpServer)#websocketHandler(
            yvertx.toHandler (fn . (unsafely_as ~ServerWebSocket)));
    ());

clientHandler client uri handler =
    (client is ~HttpClient)
        #connectWebsocket(uri is string,
                          yvertx.toHandler 
                                (handler .(unsafely_as ~WebSocket)));

dataHandler socket handler =
   (socket is ~WebSocket)#dataHandler(yvertx.toBufferHandler handler);

endHandler socket handler =
   (socket is ~WebSocket)#endHandler(yvertx.toSimpleHandler handler);

exceptionHandler socket handler =
   (socket is ~WebSocket)#exceptionHandler(
        yvertx.toExceptionHandler handler);
   
drainHandler socket handler =
   (socket is ~WebSocket)#drainHandler(yvertx.toSimpleHandler handler);

closedHandler socket handler =
   (socket is ~WebSocket)#closedHandler(yvertx.toSimpleHandler handler);

{
    serverHandler,
    clientHandler,
    dataHandler,
    endHandler,
    exceptionHandler,
    closedHandler,
    
}
 
