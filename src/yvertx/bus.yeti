/*
 * Copyright 2011 Christian Essl
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 */

module yvertx.bus;

import org.vertx.java.core: Handler, Vertx;
import org.vertx.java.core.json:JsonObject;
import org.vertx.java.core.eventbus:Message;

load yvertx;

toMessageHandler fn is (~Message -> 'a) -> ~Handler =
        toHandler fn;

toJsonMessageHandler fn =
        toMessageHandler do msg:
            fn {message = msg,
                get body () = fromJS (msg#body unsafely_as ~JsonObject),
                get replyAddress () = string msg#replyAddress,
                reply v = msg#reply(toJS v),
                replyWithHandler v handler = 
                    msg#reply(toJS v, toJsonMessageHandler handler)
               }
        done;

publish address msg vertx = 
    (vertx is ~Vertx)#eventBus()#publish(address is string, toJS msg);

send address msg handler vertx =
    (vertx is ~Vertx)#eventBus()#send(address is string, toJS msg, 
            toJsonMessageHandler handler);
    
    
register address handler resultHandler vertx =
    (vertx is ~Vertx)#eventBus()#registerHandler(address is string,
                                        toJsonMessageHandler handler,
                                        toAsyncResultHandler resultHandler);
    
registerLocal address handler vertx =
    (vertx is ~Vertx)#eventBus()#registerLocalHandler(address is string,
                                                toJsonMessageHandler handler);
        

unregister id handler vertx =
    (vertx is ~Vertx)#eventBus()#unregisterHandler(id is string, 
                                                toAsyncResultHandler handler);
        
{
    toMessageHandler,
    toJsonMessageHandler,
    publish,
    send,
    register,
    registerLocal,
    unregister,
}
