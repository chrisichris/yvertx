/*
 * Copyright 2011 Christian Essl
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 */

/**
 * build file for yvertx - run with java -jar ybuilder.jar
*/

// Build dependencies
//
//@buildDependency "org.apache.ant" "ant-junit" "1.8.1" 
//    [exclusion "junit" "junit", exclusion "org.apache.ant" "ant"];
//

load ybuilder.core.build;
load ybuilder.core.base;
load ybuilder.core.vertxbase;

config = baseConfig ();
config.name := "yvertx";
config.groupId :="org.yvertx";
config.artifactId := "yvertx-yeti-lang-impl";
config.version := "0.9.6a";
config.description := "Yeti support for vert.x";

config.deployRepository.url :=
        "file:///${basedir}/../../chrisis-maven-repo/snapshots/";

config = createBaseConfig config [
    remoteRepository "sonatype-nexus-releases" 
        "https://oss.sonatype.org/content/repositories/snapshots",
    remoteRepository "typesafe" 
        "http://repo.typesafe.com/typesafe/releases/",

    //yeti dependency
    dependency "org.yeti" "yeti" "0.9.7-SNAPSHOT" [],
    dependency "org.vert-x" "vertx-platform" "1.3.1.final"
        [ProvidedScope ()],
    dependency "org.vert-x" "vertx-testframework" "1.3.1.final" 
        [ProvidedScope ()],


    dependency "org.yeti" "yeti" "0.9.7-SNAPSHOT" [],
    dependency "org.owasp.esapi" "esapi" "2.0GA" 
        [exclusion "javax.servlet" "servlet-api"],
    dependency "commons-lang" "commons-lang" "2.0" [],
    dependency "commons-fileupload" "commons-fileupload" "1.1.1" [],
    dependency "commons-codec" "commons-codec" "1.3" [],

    dependency "org.scribe" "scribe" "1.3.0" [],
    dependency "com.ning" "async-http-client" "1.5.0" [],

    dependency "joda-time" "joda-time" "1.6" [],
    dependency "org.slf4j" "jcl-over-slf4j" "1.6.4" [],
    dependency "org.slf4j" "slf4j-log4j12" "1.6.4" [],
    dependency "log4j" "log4j" "1.2.12" [],

    dependency "org.codehaus.jackson" "jackson-core-asl" "1.9.3" [],
    dependency "com.jayway.jsonpath" "json-path" "0.5.5" [],
    dependency "org.mongodb" "mongo-java-driver" "2.7.3" [],

    dependency "junit" "junit" "3.8.2" [TestScope ()],
    dependency "org.mockito" "mockito-all" "1.8.5" [TestScope ()],
    dependency "org.hsqldb" "hsqldb" "2.0.0" [TestScope ()],
    dependency "org.springframework" 
        "spring-jdbc" "3.0.5.RELEASE" [TestScope ()],
];

config = config with createVertxConfig true config;

//register targets

config = config with registerBaseTargets config;
config = config with registerVertxTargets config;

////////////////////////////////////////////////////////////////////////////////
//---custom targets --


_ = target config "samples" "compile" 
    [Before config.livecycleTargets.testCompile] 
    do project:
        dirs = listDirs "samples" []
            |> filter (!= "");
        
        
        println "Sample dirs \(dirs)";
        
        outDir = "target/sampleclasses/";
        
        antTask "delete" ["dir":outDir] [] project;

        for dirs do sDir:
                srcDir = "samples/\(sDir)";
                cOutDir =  outDir^sDir;
                println "compiling dir \(srcDir)";
                antTask "mkdir" ["dir":cOutDir] [] project;
                helpers.yeticTask
                    cOutDir
                    srcDir
                    config.yeticIncludes
                    config.yeticSourceReaderCode
                    (pathes.compile config)
                    project;
                
        done;
    done;

        
////////////////////////////////////////////////////////////////////////////////
//---End--

// leave the final load! 
// runs the targets entered at the command line
run config;
