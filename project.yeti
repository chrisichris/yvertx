/*
 * Copyright 2011 Christian Essl
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 */

/**
 * build file for yvertx - run with java -jar ybuilder.jar
*/

// Build dependencies
//
//@buildDependency "org.apache.ant" "ant-junit" "1.8.1" 
//    [exclusion "junit" "junit", exclusion "org.apache.ant" "ant"];
//

load ybuilder.core.build;
load ybuilder.core.base;
load ybuilder.core.vertxbase;

config = baseConfig "com.github.chrisichris" "yvertx" "0.9.8-SNAPSHOT";
config.description := "Yeti support for vert.x";

//config.snapshotRepository.url :=
//        "file:///${basedir}/../../chrisis-maven-repo/snapshots/";
config.deployRepository.url :=
        "file:///${basedir}/../../chrisis-maven-repo/releases/";

config = createBaseConfig config [
    remoteRepository "sonatype-nexus-snapshots" 
        "https://oss.sonatype.org/content/repositories/snapshots",
    remoteRepository "typesafe" 
        "http://repo.typesafe.com/typesafe/releases/",

    //yeti dependency
    dependency "org.yeti" "yeti" "0.9.8-SNAPSHOT" [],
    dependency "io.vertx" "vertx-core" "2.0.0-SNAPSHOT"
        [ProvidedScope ()],
    dependency "io.vertx" "vertx-platform" "2.0.0-SNAPSHOT"
        [ProvidedScope ()],

    dependency "org.slf4j" "slf4j-api" "1.7.2" [],

    /*
    dependency "junit" "junit" "3.8.2" [TestScope ()],
    dependency "org.mockito" "mockito-all" "1.8.5" [TestScope ()],
    dependency "org.hsqldb" "hsqldb" "2.0.0" [TestScope ()],
    dependency "org.springframework" 
        "spring-jdbc" "3.0.5.RELEASE" [TestScope ()],
    */
];

config = config with createVertxConfig config;

config.vertxSysProps["vertx.lang.yeti"] := "yeb.yvertx.YetiVerticleFactory";

//register targets

config = config with registerBaseTargets config;
config = config with registerVertxTargets config;

////////////////////////////////////////////////////////////////////////////////
//---custom targets --

_ = target config "project" "propare-zip-module" 
    [Before config.vertxTargets.vertxZipModule]
    do project:
        antTask "delete" ["dir":"target/tempmain"] [] project;
        antTask "mkdir" ["dir":"target/tempmain"] [] project;
        antTask "copy" ["todir":"target/tempmain"]
            [el "fileset" ["dir":"mods/main~main~1"] []] project;
        antTask "delete" ["includeemptydirs":"true"]
            [el "fileset" ["dir":"mods/main~main~1/", 
                           "excludes":"lib/**/*"] [] ] project;
        antTask "copy" ["file":"mod.json", 
                        "todir": "mods/main~main~1"] [] project;
    done;

doAfterTarget config.vertxTargets.vertxZipModule do project:
    antTask "delete" ["dir":"mods/main~main~1"] [] project;
    antTask "copy" ["todir":"mods/main~main~1"]
                    [el "fileset" ["dir":"target/tempmain"] []] project;
done;

_ = target config "project" "compile-samples" 
    [Before config.livecycleTargets.testCompile] 
    do project:
        
        outDir = "target/sampleclasses/";
        
        antTask "delete" ["dir":outDir] [] project;

        antTask "mkdir" ["dir":outDir] [] project;
        
        helpers.yeticTask
            outDir
            "samples"
            config.yeticIncludes
            config.yeticSourceReaderCode
            (pathes.compile config)
            project;
                
    done;

        
////////////////////////////////////////////////////////////////////////////////
//---End--

// leave the final load! 
// runs the targets entered at the command line
run config;
