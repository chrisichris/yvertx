/*
 * Copyright 2011 Christian Essl
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions
 * and limitations under the License.
 */

////////////////////////////////////////////////////////////////////////////////
// The ybuilder project build file
//
// This file is a normal yeti program, which gets executed through ybuilder.jar.
//

////////////////////////////////////////////////////////////////////////////////
// Build dependencies
//
//@buildDependency "org.apache.ant" "ant-junit" "1.8.1" 
//    [exclusion "junit" "junit", exclusion "org.apache.ant" "ant"];
//

load ybuilder.core.base;



project.name := "yvertx";
project.groupId :="org.yvertx";
project.artifactId := "yvertx-yeti-lang-impl";
project.version := "0.9.6a";
project.description := "Yeti support for vert.x";

//load projectBase now
_ = load ybuilder.core.vertxBase;

//repositories
remoteRepository "sonatype-nexus-releases" 
    "https://oss.sonatype.org/content/repositories/snapshots";
remoteRepository "typesafe" 
    "http://repo.typesafe.com/typesafe/releases/";
deployRepository.url :="file:///${basedir}/../../chrisis-maven-repo/snapshots/";

//yeti dependency
//dependency "org.yeti" "yeti" "0.9.6+-SNAPSHOT" [];
//dependency "junit" "junit" "3.8" [];

////////////////////////////////////////////////////////////////////////////////
//---custom targets --

load ybuilder.core.build;
_ = target "compileSamples" [Before livecycleTargets.testCompile] 
    do project:
        dirSet = (createAntDirSet "samples" [])#getDirectoryScanner();
        dirSet#scan();
        
        dirs = dirSet#getIncludedDirectories()
            |> wrapArray
            |> map string
            |> filter defined?
            |> filter (!= "");
        
        println "Sample dirs \(dirs)";
        
        outDir = "target/sampleclasses/";
        
        antTask "delete" ["dir":outDir] [] project;

        for dirs do sDir:
                srcDir = "samples/\(sDir)";
                cOutDir =  outDir^sDir;
                println "compiling dir \(srcDir)";
                antTask "mkdir" ["dir":cOutDir] [] project;
                yeticTask
                    cOutDir
                    srcDir
                    taskProps.yetic.includes
                    taskProps.yetic.sourceReaderCode
                    pathes.compile
                    project;
                
        done;
    done;

        
////////////////////////////////////////////////////////////////////////////////
//---End--

// leave the final load! 
// runs the targets entered at the command line
load ybuilder.core.run;
